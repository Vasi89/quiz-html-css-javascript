[
    {
        "id": 1111,
        "question": "Inside which HTML element do we put the JavaScript??",
        "a": "<script>",
        "b": "<javascript>",
        "c": "<js>",
        "d": "<scripting>",
        "answer": "a"
    },
    {
        "id": 221,
        "question": "What is the correct syntax for referring to an external script called 'xxx.js'?",
        "a": "<script href='xxx.js'>",
        "b": "<script name='xxx.js'>",
        "c": "<script src='xxx.js'>",
        "d": "<script file='xxx.js'>",
        "answer": "c"
    },
    {
        "id": 333,
        "question": "How do you write 'Hello World' in an alert box?",
        "a": "msgBox('Hello World');",
        "b": "alertBox('Hello World');",
        "c": "msg('Hello World');",
        "d": "alert('Hello World');",
        "answer": "d"
    },
    {
        "id": 4444,
        "question": "Which operator returns true if the two compared values are not equal?",
        "a": "<>",
        "b": "~",
        "c": "==!",
        "d": "!==",
        "answer": "d"
    },
    {
        "id": 5,
        "question": "Which statement is the correct way to create a variable called rate and assign it the value 100?",
        "a": "let rate = 100;",
        "b": "let 100 = rate;",
        "c": "100 = let rate;",
        "d": "rate = 100;",
        "answer": "a"
    },
    {
        "id": 5,
        "question": "Which property references the DOM object that dispatched an event?",
        "a": "self",
        "b": "object",
        "c": "target",
        "d": "source",
        "answer": "c"
    },
    {
        "id": 7,
        "question": "What is one difference between collections created with Map and collections created with Object?",
        "a": "You can iterate over values in a Map in their insertion order",
        "b": "You can count the records in a Map with a single method call",
        "c": "Keys in Maps can be strings",
        "d": "You can access values in a Map without iterating over the whole collection",
        "answer": "b"
    },
    {
        "id": 8,
        "question": "Which of the following values is not a Boolean false?",
        "a": "Boolean(0)",
        "b": "Boolean('')",
        "c": "Boolean(NaN)",
        "d": "Boolean('false')",
        "answer": "d"
    },
    {
        "id": 9,
        "question": "Which of the following is not a keyword in JavaScript?",
        "a": "this",
        "b": "catch",
        "c": "function",
        "d": "array",
        "answer": "d"
    },
    {
        "id": 10,
        "question": "Which variable is an implicit parameter for every function in JavaScript?",
        "a": "Arguments",
        "b": "args",
        "c": "argsArray",
        "d": "argumentsList",
        "answer": "a"
    },
    {
        "id": 11,
        "question": "How many prototype objects are in the chain for the following array? /r 'let arr = [];'",
        "a": "3",
        "b": "2",
        "c": "0",
        "d": "1",
        "answer": "b"
    },
    {
        "id": 12,
        "question": "Which statement creates a new object using the Person constructor? Which statement creates a new Person object called 'student'?",
        "a": "var student = new Person();",
        "b": "var student = construct Person;",
        "c": "var student = Person();",
        "d": "var student = construct Person();",
        "answer": "a"
    },
    {
        "id": 13,
        "question": "How does a function create a closure?",
        "a": "It reloads the document whenever the value changes.",
        "b": "It returns a reference to a variable in its parent scope.",
        "c": "It completes execution without returning.",
        "d": "It copies a local variable to the global scope.",
        "answer": "b"
    },
    {
        "id": 14,
        "question": "How would you reference the text 'avenue' in the code shown? \\n js \\n let roadTypes = ['street', 'road', 'avenue', 'circle'];",
        "a": "roadTypes.2",
        "b": "roadTypes[3]",
        "c": "roadTypes.3",
        "d": "roadTypes_:[2]",
        "answer": "d"
    },
    {
        "id": 15,
        "question": "What is the result of running this statement? \\n javascript console.log(typeof 42)",
        "a": "float",
        "b": "value",
        "c": "number",
        "d": "integer",
        "answer": "c"
    },
    {
        "id": 16,
        "question": "Which property references the DOM object that dispatched an event?",
        "a": "self",
        "b": "object",
        "c": "target",
        "d": "source",
        "answer": "c"
    },
    {
        "id": 17,
        "question": "Which method converts JSON data to a JavaScript object?",
        "a": "JSON.fromString();",
        "b": "JSON.parse()",
        "c": "JSON.toObject()",
        "d": "JSON.stringify()",
        "answer": "b"
    },
    {
        "id": 18,
        "question": "When would you use a conditional statement?",
        "a": "When you want to reuse a set of statements multiple times.",
        "b": "When you want your code to choose between multiple options.",
        "c": "When you want to group data together.",
        "d": "When you want to loop through a group of statement.",
        "answer": "b"
    },
    {
        "id": 19,
        "question": "Which Object method returns an iterable that can be used to iterate over the properties of an object?",
        "a": "Object.get()",
        "b": "Object.loop()",
        "c": "Object.each()",
        "d": "Object.keys()",
        "answer": "d"
    },
    {
        "id": 20,
        "question": "What is one difference between collections created with Map and collections created with Object?",
        "a": "You can iterate over values in a Map in their insertion order.",
        "b": "You can count the records in a Map with a single method call.",
        "c": "Keys in Maps can be strings.",
        "d": "You can access values in a Map without iterating over the whole collection.",
        "answer": "b"
    },
    {
        "id": 21,
        "question": "0 && hi",
        "a": "ReferenceError",
        "b": "True",
        "c": "0",
        "d": "false",
        "answer": "c"
    },
    {
        "id": 22,
        "question": "Which of the following operators can be used to do a short-circuit evaluation?",
        "a": "\\",
        "b": "++",
        "c": "--",
        "d": "==",
        "answer": "a"
    },
    {
        "id": 23,
        "question": "Which statement sets the Person constructor as the parent of the Student constructor in the prototype chain?",
        "a": "Student.parent = Person;",
        "b": "Student.prototype = new Person();",
        "c": "Student.prototype = Person;",
        "d": "Student.prototype = Person();",
        "answer": "b"
    }
]